// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customer.proto

package pb

import (
	context "context"
	fmt "fmt"
	math "math"

	_ "github.com/Shivam010/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "go.saastack.io/chaku/validate"
	_ "go.saastack.io/events/eventspush"
	_ "go.saastack.io/jaal/schema"
	_ "go.saastack.io/pehredaar/pehredaar"
	types "go.saastack.io/protos/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Customer struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{0}
}

func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (m *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(m, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateCustomerRequest struct {
	Parent               string    `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Customer             *Customer `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateCustomerRequest) Reset()         { *m = CreateCustomerRequest{} }
func (m *CreateCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCustomerRequest) ProtoMessage()    {}
func (*CreateCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{1}
}

func (m *CreateCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCustomerRequest.Unmarshal(m, b)
}
func (m *CreateCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCustomerRequest.Marshal(b, m, deterministic)
}
func (m *CreateCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCustomerRequest.Merge(m, src)
}
func (m *CreateCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCustomerRequest.Size(m)
}
func (m *CreateCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCustomerRequest proto.InternalMessageInfo

func (m *CreateCustomerRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateCustomerRequest) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

type GetCustomerRequest struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ViewMask             *field_mask.FieldMask `protobuf:"bytes,2,opt,name=view_mask,json=viewMask,proto3" json:"view_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetCustomerRequest) Reset()         { *m = GetCustomerRequest{} }
func (m *GetCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerRequest) ProtoMessage()    {}
func (*GetCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{2}
}

func (m *GetCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerRequest.Unmarshal(m, b)
}
func (m *GetCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerRequest.Marshal(b, m, deterministic)
}
func (m *GetCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerRequest.Merge(m, src)
}
func (m *GetCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_GetCustomerRequest.Size(m)
}
func (m *GetCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerRequest proto.InternalMessageInfo

func (m *GetCustomerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetCustomerRequest) GetViewMask() *field_mask.FieldMask {
	if m != nil {
		return m.ViewMask
	}
	return nil
}

type DeleteCustomerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCustomerRequest) Reset()         { *m = DeleteCustomerRequest{} }
func (m *DeleteCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCustomerRequest) ProtoMessage()    {}
func (*DeleteCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{3}
}

func (m *DeleteCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCustomerRequest.Unmarshal(m, b)
}
func (m *DeleteCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCustomerRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCustomerRequest.Merge(m, src)
}
func (m *DeleteCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCustomerRequest.Size(m)
}
func (m *DeleteCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCustomerRequest proto.InternalMessageInfo

func (m *DeleteCustomerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdateCustomerRequest struct {
	Customer             *Customer             `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateCustomerRequest) Reset()         { *m = UpdateCustomerRequest{} }
func (m *UpdateCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCustomerRequest) ProtoMessage()    {}
func (*UpdateCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{4}
}

func (m *UpdateCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCustomerRequest.Unmarshal(m, b)
}
func (m *UpdateCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCustomerRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCustomerRequest.Merge(m, src)
}
func (m *UpdateCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCustomerRequest.Size(m)
}
func (m *UpdateCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCustomerRequest proto.InternalMessageInfo

func (m *UpdateCustomerRequest) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *UpdateCustomerRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type ListCustomerRequest struct {
	// Parent is a fully qualified string that contains information about the
	// owner in hierarchical manner group/location/business (required)
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// First specifies the number of rows that are to be returned starting after
	// the the cursor (value of after) (required if last is 0 and before is
	// empty).
	First uint32 `protobuf:"varint,2,opt,name=first,proto3" json:"first,omitempty"`
	// After takes any value as cursor to get the data after that point. Data
	// should be sorted on type of value specified for After For Ex. id, datetime,
	// name...
	//(required if last is 0 and before is empty).
	After string `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	// Last specifies the number of rows that are to be returned ending before the
	// the cursor (value of before) (required if first is 0 and after is empty).
	Last uint32 `protobuf:"varint,4,opt,name=last,proto3" json:"last,omitempty"`
	// Before takes any value as cursor to get the data before that point. Data
	// should be sorted on type of value specified for Before For Ex. id,
	// datetime, name...
	//(required if first is 0 and after is empty).
	Before               string                `protobuf:"bytes,5,opt,name=before,proto3" json:"before,omitempty"`
	ViewMask             *field_mask.FieldMask `protobuf:"bytes,6,opt,name=view_mask,json=viewMask,proto3" json:"view_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListCustomerRequest) Reset()         { *m = ListCustomerRequest{} }
func (m *ListCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*ListCustomerRequest) ProtoMessage()    {}
func (*ListCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{5}
}

func (m *ListCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCustomerRequest.Unmarshal(m, b)
}
func (m *ListCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCustomerRequest.Marshal(b, m, deterministic)
}
func (m *ListCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCustomerRequest.Merge(m, src)
}
func (m *ListCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_ListCustomerRequest.Size(m)
}
func (m *ListCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCustomerRequest proto.InternalMessageInfo

func (m *ListCustomerRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListCustomerRequest) GetFirst() uint32 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *ListCustomerRequest) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

func (m *ListCustomerRequest) GetLast() uint32 {
	if m != nil {
		return m.Last
	}
	return 0
}

func (m *ListCustomerRequest) GetBefore() string {
	if m != nil {
		return m.Before
	}
	return ""
}

func (m *ListCustomerRequest) GetViewMask() *field_mask.FieldMask {
	if m != nil {
		return m.ViewMask
	}
	return nil
}

type ListCustomerResponse struct {
	Nodes                []*CustomerNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	PageInfo             *types.PageInfo `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListCustomerResponse) Reset()         { *m = ListCustomerResponse{} }
func (m *ListCustomerResponse) String() string { return proto.CompactTextString(m) }
func (*ListCustomerResponse) ProtoMessage()    {}
func (*ListCustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{6}
}

func (m *ListCustomerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCustomerResponse.Unmarshal(m, b)
}
func (m *ListCustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCustomerResponse.Marshal(b, m, deterministic)
}
func (m *ListCustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCustomerResponse.Merge(m, src)
}
func (m *ListCustomerResponse) XXX_Size() int {
	return xxx_messageInfo_ListCustomerResponse.Size(m)
}
func (m *ListCustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCustomerResponse proto.InternalMessageInfo

func (m *ListCustomerResponse) GetNodes() []*CustomerNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *ListCustomerResponse) GetPageInfo() *types.PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

type CustomerNode struct {
	Position             string    `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Node                 *Customer `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CustomerNode) Reset()         { *m = CustomerNode{} }
func (m *CustomerNode) String() string { return proto.CompactTextString(m) }
func (*CustomerNode) ProtoMessage()    {}
func (*CustomerNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{7}
}

func (m *CustomerNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerNode.Unmarshal(m, b)
}
func (m *CustomerNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerNode.Marshal(b, m, deterministic)
}
func (m *CustomerNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerNode.Merge(m, src)
}
func (m *CustomerNode) XXX_Size() int {
	return xxx_messageInfo_CustomerNode.Size(m)
}
func (m *CustomerNode) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerNode.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerNode proto.InternalMessageInfo

func (m *CustomerNode) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *CustomerNode) GetNode() *Customer {
	if m != nil {
		return m.Node
	}
	return nil
}

type BatchGetCustomerRequest struct {
	Ids                  []string              `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	ViewMask             *field_mask.FieldMask `protobuf:"bytes,2,opt,name=view_mask,json=viewMask,proto3" json:"view_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BatchGetCustomerRequest) Reset()         { *m = BatchGetCustomerRequest{} }
func (m *BatchGetCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGetCustomerRequest) ProtoMessage()    {}
func (*BatchGetCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{8}
}

func (m *BatchGetCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetCustomerRequest.Unmarshal(m, b)
}
func (m *BatchGetCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetCustomerRequest.Marshal(b, m, deterministic)
}
func (m *BatchGetCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetCustomerRequest.Merge(m, src)
}
func (m *BatchGetCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGetCustomerRequest.Size(m)
}
func (m *BatchGetCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetCustomerRequest proto.InternalMessageInfo

func (m *BatchGetCustomerRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *BatchGetCustomerRequest) GetViewMask() *field_mask.FieldMask {
	if m != nil {
		return m.ViewMask
	}
	return nil
}

type BatchGetCustomerResponse struct {
	Customer             []*Customer `protobuf:"bytes,1,rep,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BatchGetCustomerResponse) Reset()         { *m = BatchGetCustomerResponse{} }
func (m *BatchGetCustomerResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGetCustomerResponse) ProtoMessage()    {}
func (*BatchGetCustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{9}
}

func (m *BatchGetCustomerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetCustomerResponse.Unmarshal(m, b)
}
func (m *BatchGetCustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetCustomerResponse.Marshal(b, m, deterministic)
}
func (m *BatchGetCustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetCustomerResponse.Merge(m, src)
}
func (m *BatchGetCustomerResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGetCustomerResponse.Size(m)
}
func (m *BatchGetCustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetCustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetCustomerResponse proto.InternalMessageInfo

func (m *BatchGetCustomerResponse) GetCustomer() []*Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func init() {
	proto.RegisterType((*Customer)(nil), "appointy.customer.v1.v1.Customer")
	proto.RegisterType((*CreateCustomerRequest)(nil), "appointy.customer.v1.v1.CreateCustomerRequest")
	proto.RegisterType((*GetCustomerRequest)(nil), "appointy.customer.v1.v1.GetCustomerRequest")
	proto.RegisterType((*DeleteCustomerRequest)(nil), "appointy.customer.v1.v1.DeleteCustomerRequest")
	proto.RegisterType((*UpdateCustomerRequest)(nil), "appointy.customer.v1.v1.UpdateCustomerRequest")
	proto.RegisterType((*ListCustomerRequest)(nil), "appointy.customer.v1.v1.ListCustomerRequest")
	proto.RegisterType((*ListCustomerResponse)(nil), "appointy.customer.v1.v1.ListCustomerResponse")
	proto.RegisterType((*CustomerNode)(nil), "appointy.customer.v1.v1.CustomerNode")
	proto.RegisterType((*BatchGetCustomerRequest)(nil), "appointy.customer.v1.v1.BatchGetCustomerRequest")
	proto.RegisterType((*BatchGetCustomerResponse)(nil), "appointy.customer.v1.v1.BatchGetCustomerResponse")
}

func init() { proto.RegisterFile("customer.proto", fileDescriptor_9efa92dae3d6ec46) }

var fileDescriptor_9efa92dae3d6ec46 = []byte{
	// 870 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xbb, 0x8f, 0xe3, 0x44,
	0x18, 0xd7, 0x38, 0xce, 0x92, 0x7c, 0xb9, 0x0d, 0x61, 0x6e, 0xb3, 0xeb, 0xf3, 0x09, 0x29, 0x67,
	0x09, 0xdd, 0xea, 0x08, 0x76, 0x12, 0x74, 0x42, 0xba, 0x03, 0x8a, 0x1c, 0x0f, 0x9d, 0x04, 0x08,
	0x2c, 0x51, 0x40, 0x73, 0x9a, 0xc4, 0x93, 0xc4, 0x4a, 0x62, 0x1b, 0xcf, 0x38, 0x68, 0x85, 0xae,
	0x39, 0x89, 0xe6, 0x1a, 0x0a, 0x24, 0x8a, 0x48, 0x08, 0x24, 0xfe, 0x07, 0x8a, 0x2d, 0x56, 0xb4,
	0xd4, 0x34, 0xf4, 0xd0, 0x40, 0x91, 0x82, 0x8a, 0x12, 0x79, 0x3c, 0xf6, 0xd9, 0x79, 0xdc, 0x65,
	0xb9, 0xc6, 0xf9, 0x66, 0xbe, 0xd7, 0x6f, 0x7e, 0xdf, 0x23, 0x50, 0x1f, 0x46, 0x8c, 0xfb, 0x73,
	0x1a, 0x9a, 0x41, 0xe8, 0x73, 0x1f, 0x9f, 0x90, 0x20, 0xf0, 0x5d, 0x8f, 0x9f, 0x99, 0x99, 0x62,
	0xd1, 0x35, 0x17, 0x5d, 0xfd, 0x65, 0xe2, 0x79, 0x3e, 0x27, 0xdc, 0xf5, 0x3d, 0x66, 0xe5, 0xe4,
	0xc4, 0x4f, 0xbf, 0x3e, 0xf6, 0xfd, 0xf1, 0x8c, 0x5a, 0xe2, 0x34, 0x88, 0x46, 0x16, 0x9d, 0x07,
	0xfc, 0x4c, 0x2a, 0x5b, 0xeb, 0xca, 0x91, 0x4b, 0x67, 0xce, 0x83, 0x39, 0x61, 0x53, 0x69, 0x71,
	0xb2, 0x20, 0x33, 0xd7, 0x21, 0x9c, 0x5a, 0xa9, 0x20, 0x15, 0x47, 0x99, 0x62, 0x38, 0x21, 0xd3,
	0x48, 0xde, 0xbe, 0xc4, 0xcf, 0x02, 0xca, 0x2c, 0xf1, 0x95, 0x57, 0xd7, 0x02, 0x3a, 0x09, 0xa9,
	0x43, 0x48, 0x68, 0x65, 0x92, 0x54, 0x35, 0xe9, 0x82, 0x7a, 0x9c, 0x05, 0x11, 0x9b, 0x58, 0xf1,
	0x47, 0x5e, 0x5f, 0x65, 0xc3, 0x09, 0x9d, 0x13, 0x2b, 0xf9, 0x49, 0x2e, 0x8d, 0x9b, 0x50, 0xb9,
	0x27, 0x1f, 0x8e, 0xeb, 0xa0, 0xb8, 0x8e, 0x86, 0x5a, 0xe8, 0xb4, 0x6a, 0x2b, 0xae, 0x73, 0xa7,
	0xf6, 0xef, 0x5f, 0x1d, 0xf4, 0xe8, 0xef, 0x4e, 0x69, 0x18, 0x31, 0xe3, 0x6b, 0x04, 0xcd, 0x7b,
	0x21, 0x25, 0x9c, 0xa6, 0xf6, 0x36, 0xfd, 0x22, 0xa2, 0x8c, 0xe3, 0x1b, 0x70, 0x10, 0x90, 0x90,
	0x7a, 0x3c, 0x71, 0xed, 0x57, 0x97, 0x7f, 0xfc, 0x52, 0x52, 0x43, 0xa5, 0x51, 0xb2, 0xa5, 0x02,
	0xdf, 0x87, 0x4a, 0x4a, 0xaf, 0xa6, 0xb4, 0xd0, 0x69, 0xad, 0x77, 0xc3, 0xdc, 0x41, 0xbc, 0x99,
	0x86, 0xef, 0x43, 0x1c, 0xa7, 0xfc, 0x18, 0x29, 0x0d, 0x64, 0x67, 0xee, 0xc6, 0x04, 0xf0, 0xfb,
	0x94, 0xaf, 0x63, 0xb8, 0xf6, 0x04, 0x7a, 0x3e, 0xbf, 0xe2, 0x3a, 0xf8, 0x0d, 0xa8, 0x2e, 0x5c,
	0xfa, 0xa5, 0x60, 0x5f, 0x26, 0xd7, 0xcd, 0xa4, 0x40, 0x66, 0x5a, 0x20, 0xf3, 0xbd, 0xb8, 0x40,
	0x1f, 0x12, 0x36, 0xb5, 0x2b, 0xb1, 0x71, 0x2c, 0x19, 0x3d, 0x68, 0xbe, 0x43, 0x67, 0x74, 0xf3,
	0xc1, 0xbb, 0x93, 0x19, 0x3f, 0x20, 0x68, 0x7e, 0x1a, 0x38, 0x5b, 0x58, 0xca, 0x53, 0x80, 0x9e,
	0x8b, 0x02, 0x7c, 0x17, 0x6a, 0x91, 0xc8, 0xb1, 0xef, 0x9b, 0x20, 0x31, 0x17, 0xaf, 0xfa, 0x15,
	0xc1, 0xd5, 0x0f, 0x5c, 0xc6, 0xf7, 0xae, 0x22, 0xca, 0xaa, 0x78, 0x04, 0xe5, 0x91, 0x1b, 0x32,
	0x2e, 0x32, 0x1e, 0xda, 0xc9, 0x21, 0xbe, 0x25, 0x23, 0x4e, 0x43, 0xad, 0x24, 0x1a, 0x27, 0x39,
	0x60, 0x0c, 0xea, 0x8c, 0x30, 0xae, 0xa9, 0xc2, 0x54, 0xc8, 0xf8, 0x18, 0x0e, 0x06, 0x74, 0xe4,
	0x87, 0x54, 0x2b, 0x0b, 0x53, 0x79, 0x2a, 0x56, 0xe8, 0xe0, 0x12, 0x15, 0x7a, 0x8c, 0xe0, 0xa8,
	0xf8, 0x16, 0x16, 0xf8, 0x1e, 0xa3, 0xf8, 0x2e, 0x94, 0x3d, 0xdf, 0xa1, 0x4c, 0x43, 0xad, 0xd2,
	0x69, 0xad, 0xf7, 0xca, 0x33, 0x99, 0xfe, 0xc8, 0x77, 0xa8, 0x9d, 0xf8, 0xe0, 0xdb, 0x50, 0x0d,
	0xc8, 0x98, 0x3e, 0x70, 0xbd, 0x91, 0x2f, 0xc9, 0xd5, 0x4c, 0x46, 0x08, 0xe3, 0x64, 0x38, 0x35,
	0x93, 0x19, 0xfc, 0x98, 0x8c, 0xe9, 0x7d, 0x6f, 0xe4, 0xdb, 0x95, 0x40, 0x4a, 0x06, 0x81, 0x2b,
	0xf9, 0x68, 0x58, 0x87, 0x4a, 0xe0, 0x33, 0x37, 0x5e, 0x1a, 0x72, 0xa6, 0xb2, 0x33, 0xbe, 0x0d,
	0x6a, 0x9c, 0x6b, 0xef, 0x59, 0xb0, 0x85, 0xb9, 0xe1, 0xc0, 0x49, 0x9f, 0xf0, 0xe1, 0x64, 0xcb,
	0x00, 0x34, 0xa0, 0xe4, 0x3a, 0xc9, 0x7b, 0xab, 0x76, 0x2c, 0xfe, 0xff, 0xbe, 0xff, 0x0c, 0xb4,
	0xcd, 0x2c, 0x92, 0xd8, 0xb7, 0x0a, 0x5d, 0x5c, 0xda, 0x0f, 0x7c, 0xe6, 0xd2, 0xfb, 0xfd, 0x05,
	0xa8, 0xa6, 0xd7, 0x0c, 0xff, 0x84, 0xa0, 0x5e, 0x5c, 0x29, 0xd8, 0xdc, 0x1d, 0x6d, 0xdb, 0xee,
	0xd1, 0x9f, 0x9d, 0xdd, 0x78, 0x7b, 0xb9, 0x52, 0x2b, 0x69, 0x73, 0xff, 0xb3, 0x52, 0x95, 0x0a,
	0x3a, 0xbf, 0x68, 0x37, 0x70, 0x7d, 0x58, 0x88, 0xf8, 0xe8, 0xb7, 0x3f, 0xbf, 0x55, 0xb0, 0x71,
	0x68, 0x2d, 0xba, 0x56, 0x1a, 0x8a, 0xdd, 0x41, 0xb7, 0xf0, 0x37, 0x08, 0x6a, 0x39, 0x2a, 0xf0,
	0xab, 0x3b, 0x53, 0x6e, 0x96, 0x65, 0x1f, 0x7c, 0x9d, 0xe5, 0x4a, 0x55, 0xe3, 0x8d, 0x72, 0x7e,
	0xd1, 0x86, 0x27, 0xf4, 0x0a, 0x3c, 0x47, 0x18, 0x17, 0xf0, 0x58, 0x5f, 0xb9, 0xce, 0x43, 0xfc,
	0x1d, 0x82, 0x7a, 0x71, 0x33, 0x3d, 0x85, 0xb7, 0xad, 0x2b, 0x4c, 0x3f, 0xde, 0xe8, 0x84, 0x77,
	0xe3, 0xff, 0x2f, 0xe3, 0xcd, 0x14, 0x4c, 0x9e, 0x28, 0xa7, 0x10, 0x22, 0x01, 0x76, 0x6b, 0x1b,
	0xb0, 0x9f, 0x11, 0xd4, 0x8b, 0xdb, 0xef, 0x29, 0xc0, 0xb6, 0xae, 0xc9, 0x7d, 0x08, 0xfb, 0x64,
	0xb9, 0x52, 0x0f, 0xa1, 0x96, 0xa9, 0x8b, 0x60, 0xa3, 0x42, 0x58, 0x01, 0xb6, 0xa5, 0x5f, 0x5f,
	0x03, 0x9b, 0xf3, 0x7d, 0x18, 0xd7, 0xf8, 0x7b, 0x04, 0x57, 0xf2, 0x8b, 0x04, 0xb7, 0x77, 0xc2,
	0xd8, 0xb2, 0x3b, 0xf5, 0xd7, 0xf6, 0xb4, 0x4e, 0x86, 0x48, 0x54, 0x3c, 0xeb, 0xc8, 0xf3, 0x8b,
	0x76, 0x0d, 0xaa, 0x19, 0x36, 0x01, 0xf8, 0x45, 0x5c, 0x6c, 0x43, 0xfc, 0x23, 0x82, 0xc6, 0xfa,
	0x4c, 0xe2, 0xce, 0xce, 0xac, 0x3b, 0x96, 0x84, 0xde, 0xbd, 0x84, 0x87, 0xc4, 0x7a, 0x73, 0xb9,
	0x52, 0xcb, 0x62, 0xb7, 0x08, 0x64, 0x1a, 0x3e, 0x2e, 0x0e, 0xc8, 0x40, 0x3a, 0xf6, 0xd5, 0xcf,
	0x95, 0x60, 0x30, 0x38, 0x10, 0xfd, 0xf4, 0xfa, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xfc, 0xa7,
	0xb7, 0x64, 0x67, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomersClient is the client API for Customers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomersClient interface {
	// CreateCustomer creates new customer.
	CreateCustomer(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*Customer, error)
	// GetCustomer returns the customer by its unique id.
	GetCustomer(ctx context.Context, in *GetCustomerRequest, opts ...grpc.CallOption) (*Customer, error)
	// DeleteCustomer will delete the customer from the system by Id.
	// This will be a soft delete from the system
	DeleteCustomer(ctx context.Context, in *DeleteCustomerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// UpdateCustomer will update the customer identified by its customer id.
	// Update Customer uses Field Mask to update specific properties of customer object
	UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*Customer, error)
	// ListCustomer lists all the Customer(s)
	ListCustomer(ctx context.Context, in *ListCustomerRequest, opts ...grpc.CallOption) (*ListCustomerResponse, error)
	// Gets all the Customer(s) by their ids
	BatchGetCustomer(ctx context.Context, in *BatchGetCustomerRequest, opts ...grpc.CallOption) (*BatchGetCustomerResponse, error)
}

type customersClient struct {
	cc *grpc.ClientConn
}

func NewCustomersClient(cc *grpc.ClientConn) CustomersClient {
	return &customersClient{cc}
}

func (c *customersClient) CreateCustomer(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/appointy.customer.v1.v1.Customers/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customersClient) GetCustomer(ctx context.Context, in *GetCustomerRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/appointy.customer.v1.v1.Customers/GetCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customersClient) DeleteCustomer(ctx context.Context, in *DeleteCustomerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appointy.customer.v1.v1.Customers/DeleteCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customersClient) UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/appointy.customer.v1.v1.Customers/UpdateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customersClient) ListCustomer(ctx context.Context, in *ListCustomerRequest, opts ...grpc.CallOption) (*ListCustomerResponse, error) {
	out := new(ListCustomerResponse)
	err := c.cc.Invoke(ctx, "/appointy.customer.v1.v1.Customers/ListCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customersClient) BatchGetCustomer(ctx context.Context, in *BatchGetCustomerRequest, opts ...grpc.CallOption) (*BatchGetCustomerResponse, error) {
	out := new(BatchGetCustomerResponse)
	err := c.cc.Invoke(ctx, "/appointy.customer.v1.v1.Customers/BatchGetCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomersServer is the server API for Customers service.
type CustomersServer interface {
	// CreateCustomer creates new customer.
	CreateCustomer(context.Context, *CreateCustomerRequest) (*Customer, error)
	// GetCustomer returns the customer by its unique id.
	GetCustomer(context.Context, *GetCustomerRequest) (*Customer, error)
	// DeleteCustomer will delete the customer from the system by Id.
	// This will be a soft delete from the system
	DeleteCustomer(context.Context, *DeleteCustomerRequest) (*empty.Empty, error)
	// UpdateCustomer will update the customer identified by its customer id.
	// Update Customer uses Field Mask to update specific properties of customer object
	UpdateCustomer(context.Context, *UpdateCustomerRequest) (*Customer, error)
	// ListCustomer lists all the Customer(s)
	ListCustomer(context.Context, *ListCustomerRequest) (*ListCustomerResponse, error)
	// Gets all the Customer(s) by their ids
	BatchGetCustomer(context.Context, *BatchGetCustomerRequest) (*BatchGetCustomerResponse, error)
}

// UnimplementedCustomersServer can be embedded to have forward compatible implementations.
type UnimplementedCustomersServer struct {
}

func (*UnimplementedCustomersServer) CreateCustomer(ctx context.Context, req *CreateCustomerRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomer not implemented")
}
func (*UnimplementedCustomersServer) GetCustomer(ctx context.Context, req *GetCustomerRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomer not implemented")
}
func (*UnimplementedCustomersServer) DeleteCustomer(ctx context.Context, req *DeleteCustomerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomer not implemented")
}
func (*UnimplementedCustomersServer) UpdateCustomer(ctx context.Context, req *UpdateCustomerRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomer not implemented")
}
func (*UnimplementedCustomersServer) ListCustomer(ctx context.Context, req *ListCustomerRequest) (*ListCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCustomer not implemented")
}
func (*UnimplementedCustomersServer) BatchGetCustomer(ctx context.Context, req *BatchGetCustomerRequest) (*BatchGetCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchGetCustomer not implemented")
}

func RegisterCustomersServer(s *grpc.Server, srv CustomersServer) {
	s.RegisterService(&_Customers_serviceDesc, srv)
}

func _Customers_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomersServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.customer.v1.v1.Customers/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomersServer).CreateCustomer(ctx, req.(*CreateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customers_GetCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomersServer).GetCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.customer.v1.v1.Customers/GetCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomersServer).GetCustomer(ctx, req.(*GetCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customers_DeleteCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomersServer).DeleteCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.customer.v1.v1.Customers/DeleteCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomersServer).DeleteCustomer(ctx, req.(*DeleteCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customers_UpdateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomersServer).UpdateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.customer.v1.v1.Customers/UpdateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomersServer).UpdateCustomer(ctx, req.(*UpdateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customers_ListCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomersServer).ListCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.customer.v1.v1.Customers/ListCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomersServer).ListCustomer(ctx, req.(*ListCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customers_BatchGetCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGetCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomersServer).BatchGetCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appointy.customer.v1.v1.Customers/BatchGetCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomersServer).BatchGetCustomer(ctx, req.(*BatchGetCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Customers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appointy.customer.v1.v1.Customers",
	HandlerType: (*CustomersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCustomer",
			Handler:    _Customers_CreateCustomer_Handler,
		},
		{
			MethodName: "GetCustomer",
			Handler:    _Customers_GetCustomer_Handler,
		},
		{
			MethodName: "DeleteCustomer",
			Handler:    _Customers_DeleteCustomer_Handler,
		},
		{
			MethodName: "UpdateCustomer",
			Handler:    _Customers_UpdateCustomer_Handler,
		},
		{
			MethodName: "ListCustomer",
			Handler:    _Customers_ListCustomer_Handler,
		},
		{
			MethodName: "BatchGetCustomer",
			Handler:    _Customers_BatchGetCustomer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customer.proto",
}
