// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customer.proto
package pb

import (
	"go.saastack.io/protoc-gen-grpc-wrapper/middleware"
	"go.uber.org/fx"
)

// UnregisteredMethods_Customers will provide list of methods to un register from GRPC server
var UnregisteredMethods_Customers = fx.Provide(
	fx.Annotated{
		Group:  "methods",
		Target: _Customers_methodsList,
	},
)

func _Customers_methodsList() middleware.UnregisteredMethods {
	return middleware.UnregisteredMethods{
		"/appointy.customer.v1.v1.Customers/BatchGetCustomer",
	}
}

// MaskFieldsFromGrpcResonse will mask null the marked fields from response
func (m *Customer) MaskFieldsFromGrpcResonse() {
	if m == nil {
		return
	}

}

// MaskFieldsFromGrpcRequest will mask null the marked fields from request
func (m *Customer) MaskFieldsFromGrpcRequest() {
	if m == nil {
		return
	}

}

// MaskFieldsFromGrpcResonse will mask null the marked fields from response
func (m *CreateCustomerRequest) MaskFieldsFromGrpcResonse() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetCustomer()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcResonse()
	}

}

// MaskFieldsFromGrpcRequest will mask null the marked fields from request
func (m *CreateCustomerRequest) MaskFieldsFromGrpcRequest() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetCustomer()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcRequest()
	}

}

// MaskFieldsFromGrpcResonse will mask null the marked fields from response
func (m *GetCustomerRequest) MaskFieldsFromGrpcResonse() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetViewMask()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcResonse()
	}

}

// MaskFieldsFromGrpcRequest will mask null the marked fields from request
func (m *GetCustomerRequest) MaskFieldsFromGrpcRequest() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetViewMask()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcRequest()
	}

}

// MaskFieldsFromGrpcResonse will mask null the marked fields from response
func (m *DeleteCustomerRequest) MaskFieldsFromGrpcResonse() {
	if m == nil {
		return
	}

}

// MaskFieldsFromGrpcRequest will mask null the marked fields from request
func (m *DeleteCustomerRequest) MaskFieldsFromGrpcRequest() {
	if m == nil {
		return
	}

}

// MaskFieldsFromGrpcResonse will mask null the marked fields from response
func (m *UpdateCustomerRequest) MaskFieldsFromGrpcResonse() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetCustomer()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcResonse()
	}

	if face, ok := interface{}(m.GetUpdateMask()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcResonse()
	}

}

// MaskFieldsFromGrpcRequest will mask null the marked fields from request
func (m *UpdateCustomerRequest) MaskFieldsFromGrpcRequest() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetCustomer()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcRequest()
	}

	if face, ok := interface{}(m.GetUpdateMask()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcRequest()
	}

}

// MaskFieldsFromGrpcResonse will mask null the marked fields from response
func (m *ListCustomerRequest) MaskFieldsFromGrpcResonse() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetViewMask()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcResonse()
	}

}

// MaskFieldsFromGrpcRequest will mask null the marked fields from request
func (m *ListCustomerRequest) MaskFieldsFromGrpcRequest() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetViewMask()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcRequest()
	}

}

// MaskFieldsFromGrpcResonse will mask null the marked fields from response
func (m *ListCustomerResponse) MaskFieldsFromGrpcResonse() {
	if m == nil {
		return
	}

	for _, item := range m.GetNodes() {
		if face, ok := interface{}(item).(middleware.GrpcRequestResponseMasker); ok {
			face.MaskFieldsFromGrpcResonse()
		}
	}

	if face, ok := interface{}(m.GetPageInfo()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcResonse()
	}

}

// MaskFieldsFromGrpcRequest will mask null the marked fields from request
func (m *ListCustomerResponse) MaskFieldsFromGrpcRequest() {
	if m == nil {
		return
	}

	for _, item := range m.GetNodes() {
		if face, ok := interface{}(item).(middleware.GrpcRequestResponseMasker); ok {
			face.MaskFieldsFromGrpcRequest()
		}
	}

	if face, ok := interface{}(m.GetPageInfo()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcRequest()
	}

}

// MaskFieldsFromGrpcResonse will mask null the marked fields from response
func (m *CustomerNode) MaskFieldsFromGrpcResonse() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetNode()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcResonse()
	}

}

// MaskFieldsFromGrpcRequest will mask null the marked fields from request
func (m *CustomerNode) MaskFieldsFromGrpcRequest() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetNode()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcRequest()
	}

}

// MaskFieldsFromGrpcResonse will mask null the marked fields from response
func (m *BatchGetCustomerRequest) MaskFieldsFromGrpcResonse() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetViewMask()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcResonse()
	}

}

// MaskFieldsFromGrpcRequest will mask null the marked fields from request
func (m *BatchGetCustomerRequest) MaskFieldsFromGrpcRequest() {
	if m == nil {
		return
	}

	if face, ok := interface{}(m.GetViewMask()).(middleware.GrpcRequestResponseMasker); ok {
		face.MaskFieldsFromGrpcRequest()
	}

}

// MaskFieldsFromGrpcResonse will mask null the marked fields from response
func (m *BatchGetCustomerResponse) MaskFieldsFromGrpcResonse() {
	if m == nil {
		return
	}

	for _, item := range m.GetCustomer() {
		if face, ok := interface{}(item).(middleware.GrpcRequestResponseMasker); ok {
			face.MaskFieldsFromGrpcResonse()
		}
	}

}

// MaskFieldsFromGrpcRequest will mask null the marked fields from request
func (m *BatchGetCustomerResponse) MaskFieldsFromGrpcRequest() {
	if m == nil {
		return
	}

	for _, item := range m.GetCustomer() {
		if face, ok := interface{}(item).(middleware.GrpcRequestResponseMasker); ok {
			face.MaskFieldsFromGrpcRequest()
		}
	}

}
